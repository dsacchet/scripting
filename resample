#!/bin/bash
#
# Version 1.0 :
#  - Version originale, r??crite de z?ro
#
# Version 1.1 :
#
#  - Suppression des messages d'erreur pour lame et affichage OK/PAS OK
#  - Rajout des quotes pour la cr?ation du r?pertoire
#
# Version 1.2 :
#
#  - Rajout de l'output rate rentr? sur la ligne de commande lors de
#    l'encodage
#
# Version 1.3 (2005/06/17) :
#
#  - V?rification du bitrate du fichier source. Si identique ? la sortie
#    alors on fait juste une copie
#
# Version 1.4 (2005/12/06) :
#
# - Ajout du support mpc
# - Correction d'un bug ressorti par mp3info est UNKNOW
# - Suppression d'un message d'erreur pour clarifier la sortie du script
# - Ajout d'un indicateur d'avancement sur le nombre de fichier
# - Ajout de la d?tection des programmes utilis?es (mp3info, lame et mpcdec)
#
# Version 1.5 (2006-02-22) :
#
# - Changement de l'affichage pour afficher la progression en d?but de ligne
# - Passage du code sur 80 caract?res par ligne
#

if [ $# -ne 3 ]
then
	echo "resample 1.0"
	echo "Usage : ./resample <input_dir> <output_dir> <output_rate>"
fi

which lame &> /dev/null
if [ $? -ne 0 ]
then
	echo "lame must be installed and in the path !"
	exit 1
fi

#which mpcdec &> /dev/null
#if [ $? -ne 0 ]
#then
#	echo "mpcdec must be installed and in the path !"
#	exit 1
#fi

which mp3info &> /dev/null
if [ $? -ne 0 ]
then
	echo "mP3info must be installed and in the path !"
	exit 1
fi

input_dir="$1"
output_dir="$2"
output_rate="$3"

if [ ! -d "${output_dir}" ]
then
	mkdir -p "${output_dir}" 2> /dev/null
	if [ $? -ne 0 ]
	then
		echo "Impossible to create output dir :"
		echo "  '${output_dir}'"
		echo "Aborting ..."
		exit 1
	fi
elif [ ! -w "${output_dir}" ]
then
	echo "Output dir is not writable !"
	echo "Aborting ..."
	exit 1
fi

is_number=`echo ${output_rate} | sed 's@^[0-9][0-9]*$@1@'`
if [ "${is_number}" != "1" ]
then
	echo "Output rate must be a number !"
	echo "Aborting ..."
	exit 1
fi

is_ok=`echo "scale=1; ${output_rate}/8" | bc | sed 's@^[0-9]*\.0$@1@'`
if [ "${is_ok}" != "1" ]
then
	echo "Output rate must be a multiple of 8 !"
	echo "Aborting ..."
	exit 1
fi

nb_files=`find "${input_dir}" -type f 2> /dev/null | \
	egrep -i ".(mp3|wav|mp1|mpg|mp2|mpc)$" | wc -l` 
current_file=0

(find "${input_dir}" -type f 2> /dev/null | \
 egrep -i ".(mp3|wav|mp1|mpg|mp2|mpc)$") | \
while read file
do
	current_file=$(($current_file+1))
	output_file=`basename "${file}"`
	case ${file:$((${#file}-3))} in
		mpc)
			echo -n "($current_file/$nb_files) Encoding '${output_file}' ... "
			mpcdec "${file}" - | \
				lame -s 44.1 -q 0 -b ${output_rate} --add-id3v2 --quiet \
				- \
				"${output_dir}/`echo "${output_file}" | \
				sed 's@^\(.*\)\....$@\1.mp3@'`" \
				2> /dev/null
			if [ $? -ne 0 ]
			then
				echo "NO OK"
			else
				echo "OK"
			fi
			;;
		mp3)
			input_rate=`mp3info -x "${file}" 2> /dev/null | \
				egrep "^Audio:" | \
				sed "s@.* \([0-9]*\) KB/s, .*@\1@" 2> /dev/null`
			if [ "${input_rate}" = "${output_rate}" ]
			then
				echo -n "($current_file/$nb_files) "
				echo -n "No resampling needed, pass ... just copy  ... "
				cp "${file}" "${output_dir}/`echo "${output_file}" | \
					sed 's@^\(.*\)\....$@\1.mp3@'`"
				if [ $? -ne 0 ]
				then
					echo "NO OK"
				else
					echo "OK"
				fi
				continue;
			fi
			TITLE=`mp3info -p "%t" "${file}" 2> /dev/null`
			ARTIST=`mp3info -p "%a" "${file}" 2> /dev/null`
			ALBUM=`mp3info -p "%l" "${file}" 2> /dev/null`
			YEAR=`mp3info -p "%y" "${file}" 2> /dev/null`
			COMMENT=`mp3info -p "%c" "${file}" 2> /dev/null`
			TRACK=`mp3info -p "%n" "${file}" 2> /dev/null`
			GENRE=`mp3info -p "%g" "${file}" 2> /dev/null`
			if [ `lame --genre-list | \
				egrep " ?[0-9]+ ${GENRE}$" | \
				wc -l` -eq 0 ]
			then
				GENRE=""
			fi
			echo -n "($current_file/$nb_files) Encoding '${output_file}' ... "
			lame -s 44.1 -q 0 -b ${output_rate} --add-id3v2 --quiet \
				--tt "${TITLE}" \
				--ta "${ARTIST}" \
				--tl "${ALBUM}" \
				--ty "${YEAR}" \
				--tc "${COMMENT}" \
				--tn "${TRACK}" \
				--tg "${GENRE}" \
				"${file}" \
				"${output_dir}/`echo "${output_file}" | \
				sed 's@^\(.*\)\....$@\1.mp3@'`" \
				2> /dev/null
			if [ $? -ne 0 ]
			then
				echo "NO OK"
			else
				echo "OK"
			fi
			;;
		mp1|mp2|mpg|wav)
			echo -n "($current_file/$nb_files) Encoding '${output_file}' ... "
			lame -s 44.1 -q 0 -b ${output_rate} --add-id3v2 --quiet \
				"${file}" \
				"${output_dir}/`echo "${output_file}" | \
				sed 's@^\(.*\)\....$@\1.mp3@'`" \
				2> /dev/null
			if [ $? -ne 0 ]
			then
				echo "NO OK"
			else
				echo "OK"
			fi
			;;
	esac
done
